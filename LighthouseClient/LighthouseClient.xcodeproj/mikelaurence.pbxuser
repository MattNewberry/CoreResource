// !$*UTF8*$!
{
	1D6058900D05DD3D006BFB54 /* LighthouseClient */ = {
		activeExec = 0;
		executables = (
			B5A9C3CC1142C29F0007B71C /* LighthouseClient */,
		);
	};
	28216C960DB411BC00E5133A /* TicketsController.m */ = {
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {901, 446}}";
			sepNavSelRange = "{214, 0}";
			sepNavVisRange = "{0, 262}";
		};
	};
	29B97313FDCFA39411CA2CEA /* Project object */ = {
		activeBuildConfigurationName = Debug;
		activeExecutable = B5A9C3CC1142C29F0007B71C /* LighthouseClient */;
		activeTarget = 1D6058900D05DD3D006BFB54 /* LighthouseClient */;
		addToTargets = (
			1D6058900D05DD3D006BFB54 /* LighthouseClient */,
		);
		codeSenseManager = B5A9C3E21142C2A30007B71C /* Code sense */;
		executables = (
			B5A9C3CC1142C29F0007B71C /* LighthouseClient */,
		);
		perUserDictionary = {
			PBXConfiguration.PBXFileTableDataSource3.PBXFileTableDataSource = {
				PBXFileTableDataSourceColumnSortingDirectionKey = "-1";
				PBXFileTableDataSourceColumnSortingKey = PBXFileDataSource_Filename_ColumnID;
				PBXFileTableDataSourceColumnWidthsKey = (
					20,
					341,
					20,
					48.16259765625,
					43,
					43,
					20,
				);
				PBXFileTableDataSourceColumnsKey = (
					PBXFileDataSource_FiletypeID,
					PBXFileDataSource_Filename_ColumnID,
					PBXFileDataSource_Built_ColumnID,
					PBXFileDataSource_ObjectSize_ColumnID,
					PBXFileDataSource_Errors_ColumnID,
					PBXFileDataSource_Warnings_ColumnID,
					PBXFileDataSource_Target_ColumnID,
				);
			};
			PBXPerProjectTemplateStateSaveDate = 289587871;
			PBXWorkspaceStateSaveDate = 289587871;
		};
		sourceControlManager = B5A9C3E11142C2A30007B71C /* Source Control */;
		userBuildSettings = {
		};
	};
	B5A9C3CC1142C29F0007B71C /* LighthouseClient */ = {
		isa = PBXExecutable;
		activeArgIndices = (
		);
		argumentStrings = (
		);
		autoAttachOnCrash = 1;
		breakpointsEnabled = 0;
		configStateDict = {
		};
		customDataFormattersEnabled = 1;
		dataTipCustomDataFormattersEnabled = 1;
		dataTipShowTypeColumn = 1;
		dataTipSortType = 0;
		debuggerPlugin = GDBDebugging;
		disassemblyDisplayState = 0;
		enableDebugStr = 1;
		environmentEntries = (
		);
		executableSystemSymbolLevel = 0;
		executableUserSymbolLevel = 0;
		libgmallocEnabled = 0;
		name = LighthouseClient;
		showTypeColumn = 0;
		sourceDirectories = (
		);
	};
	B5A9C3E11142C2A30007B71C /* Source Control */ = {
		isa = PBXSourceControlManager;
		fallbackIsa = XCSourceControlManager;
		isSCMEnabled = 0;
		scmConfiguration = {
			repositoryNamesForRoots = {
				"" = "";
			};
		};
	};
	B5A9C3E21142C2A30007B71C /* Code sense */ = {
		isa = PBXCodeSenseManager;
		indexTemplatePath = "";
	};
	B5A9C4E81142C2E10007B71C /* ASIHTTPRequestConfig.h */ = {
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {1876, 1064}}";
			sepNavSelRange = "{0, 0}";
			sepNavVisRange = "{1000, 1098}";
		};
	};
	B5A9C52E1142C3070007B71C /* Ticket.h */ = {
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {901, 446}}";
			sepNavSelRange = "{201, 0}";
			sepNavVisRange = "{0, 254}";
		};
	};
	B5A9C5311142C3240007B71C /* lighthouse.xcdatamodel */ = {
		uiCtxt = {
			"Xdesign Model Editor Bookmark Key" = {
				UIContextForDetailArea = {
					_indexOfSelectedPane = 0;
					_indexOfSelectedView = 0;
				};
				UIContextForEntityArea = {
					_indexOfSelectedView = 0;
					chosenTableColumnns = (
						"ET Entity",
						"ET Abstract",
						"ET Class",
					);
					chosenTableColumnns_sortDirections = (
						YES,
					);
					chosenTableColumnns_sortKeys = (
						name,
					);
					chosenTableColumnns_sortSelectors = (
						"_xdcaseInsensitiveNumericCompare:",
					);
					chosenTableWidths = (
						103.000000,
						22.000000,
						55.080078,
					);
				};
				UIContextForLayoutManager = {
					detailSplitGeometry = {
						_collapsingFrameDimension = 0;
						_indexOfCollapsedView = 0;
						_percentageOfCollapsedView = 0;
						isCollapsed = yes;
						sizes = (
							"{{0, 0}, {626, 218}}",
							"{{631, 0}, {329, 218}}",
						);
					};
					diagramSplitGeometry = {
						_collapsingFrameDimension = 0;
						_indexOfCollapsedView = 0;
						_percentageOfCollapsedView = 0;
						isCollapsed = yes;
						sizes = (
							"{{0, 0}, {960, 220}}",
							"{{0, 225}, {960, 236}}",
						);
					};
					tableSplitGeometry = {
						_collapsingFrameDimension = 0;
						_indexOfCollapsedView = 0;
						_percentageOfCollapsedView = 0;
						isCollapsed = yes;
						sizes = (
							"{{0, 0}, {205, 218}}",
							"{{210, 0}, {414, 218}}",
						);
					};
				};
				UIContextForPropertyArea = {
					_indexOfSelectedView = 0;
					chosenTableColumnnFRTs = (
						"FT Fetch Request",
						"FT Predicate",
					);
					chosenTableColumnnFRTs_sortDirections = (
						YES,
					);
					chosenTableColumnnFRTs_sortKeys = (
						name,
					);
					chosenTableColumnnFRTs_sortSelectors = (
						"_xdcaseInsensitiveNumericCompare:",
					);
					chosenTableColumnnsAT = (
						"AT Attribute",
						"AT Type",
					);
					chosenTableColumnnsAT_sortDirections = (
						YES,
					);
					chosenTableColumnnsAT_sortKeys = (
						name,
					);
					chosenTableColumnnsAT_sortSelectors = (
						"_xdcaseInsensitiveNumericCompare:",
					);
					chosenTableColumnnsFPT = (
						"FP FetchedProperty",
						"FP Destination",
						"FP Predicate",
					);
					chosenTableColumnnsFPT_sortDirections = (
						YES,
					);
					chosenTableColumnnsFPT_sortKeys = (
						name,
					);
					chosenTableColumnnsFPT_sortSelectors = (
						"_xdcaseInsensitiveNumericCompare:",
					);
					chosenTableColumnnsPT = (
						"PT Property",
						"PT Kind",
						"PT SharedKeyOne",
					);
					chosenTableColumnnsPT_sortDirections = (
						YES,
					);
					chosenTableColumnnsPT_sortKeys = (
						name,
					);
					chosenTableColumnnsPT_sortSelectors = (
						"_xdcaseInsensitiveNumericCompare:",
					);
					chosenTableColumnnsRT = (
						"RT Relationship",
						"RT Destination",
					);
					chosenTableColumnnsRT_sortDirections = (
						YES,
					);
					chosenTableColumnnsRT_sortKeys = (
						name,
					);
					chosenTableColumnnsRT_sortSelectors = (
						"_xdcaseInsensitiveNumericCompare:",
					);
					chosenTableWidthsAT = (
						128.000000,
						64.000000,
					);
					chosenTableWidthsFPT = (
						128.000000,
						64.000000,
						144.764160,
					);
					chosenTableWidthsFRT = (
						128.000000,
						249.764160,
					);
					chosenTableWidthsPT = (
						128.000000,
						108.110840,
						151.570801,
					);
					chosenTableWidthsRT = (
						128.000000,
						64.000000,
					);
				};
				"xdesign model browser state key - shown/hidden" = 1;
				"xdesign model diagram view visible rect key" = "{{-149, 0}, {945, 221}}";
			};
		};
	};
	B5A9C5341142C3B20007B71C /* tickets.json */ = {
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {4324, 3895}}";
			sepNavSelRange = "{0, 0}";
			sepNavVisRange = "{0, 2495}";
		};
	};
	B5A9C5351142C3C50007B71C /* LighthouseResource.h */ = {
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {901, 446}}";
			sepNavSelRange = "{207, 0}";
			sepNavVisRange = "{0, 266}";
		};
	};
	B5A9C5361142C3C50007B71C /* LighthouseResource.m */ = {
		uiCtxt = {
			sepNavIntBoundsRect = "{{0, 0}, {901, 446}}";
			sepNavSelRange = "{0, 0}";
			sepNavVisRange = "{0, 223}";
		};
	};
}
